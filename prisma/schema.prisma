// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum category {
  CRYPTO
  SCIENCE
  TECHNOLOGY
  PROGRMMING
  MUSIC
  MOVIES 
  GAMING
  BOOKS
  SPORTS
}

model User {
  id            String   @id @default(cuid())
  address       String
  clerkId       String   @unique
  profilePicture String  
  createdAt     DateTime @default(now())
  votes         Vote[]   @relation("UserToVote")
}


model Poll {
  id          String   @id @default(cuid())
  authorId    String
  title       String
  description String
  image      String
  category    category
  options     Option[]
  votes       Vote[]
  isPrivatet Boolean
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime @default(now())
}

model Vote {
  id          String   @id @default(cuid())
  user        User     @relation("UserToVote", fields: [userId], references: [id])
  userId      String
  option      Option   @relation(fields: [optionId], references: [id])
  optionId    String
  pollId      String
  poll        Poll     @relation(fields: [pollId], references: [id]) 
  createdAt   DateTime @default(now())
}

model Option {
  id          String   @id @default(cuid())
  title       String
  desc       String
  votes       Vote[]
  poll        Poll     @relation(fields: [pollId], references: [id])
  pollId      String
} 